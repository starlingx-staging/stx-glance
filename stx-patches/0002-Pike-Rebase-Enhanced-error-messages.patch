From c73ab48f47cf9c72c0c3c4409a458c489a323be9 Mon Sep 17 00:00:00 2001
From: Stefan Dinescu <stefan.dinescu@windriver.com>
Date: Thu, 10 Dec 2015 15:44:59 +0200
Subject: [PATCH 02/21] Pike Rebase: Enhanced error messages

Unhelpful error received if image creation failed due to insufficient
free space

When glance CLI commands for image creation fail it returns a HTTP 500
error with a generic reason that provides no real explanation of the
failure.

Modify this behavior by returning a proper HTTP error code for
insufficient space and return a relevant message for this and other
failure cases.

(cherry picked from commit fbcc1ff939a495bb52b7940ff082b6f3d320b060)
Signed-off-by: Robert Church <robert.church@windriver.com>
---
 glance/api/v1/upload_utils.py             | 15 ++++++++++++++-
 glance/tests/unit/fake_rados.py           |  3 +++
 glance/tests/unit/v1/test_api.py          | 12 ++++++++++--
 glance/tests/unit/v1/test_upload_utils.py |  5 ++++-
 4 files changed, 31 insertions(+), 4 deletions(-)

diff --git a/glance/api/v1/upload_utils.py b/glance/api/v1/upload_utils.py
index a4710ee..6aa679c 100644
--- a/glance/api/v1/upload_utils.py
+++ b/glance/api/v1/upload_utils.py
@@ -26,6 +26,10 @@ import glance.db
 from glance.i18n import _, _LE, _LI
 import glance.registry.client.v1.api as registry
 
+try:
+    import rbd
+except ImportError:
+    rbd = None
 
 CONF = cfg.CONF
 LOG = logging.getLogger(__name__)
@@ -280,9 +284,18 @@ def upload_data_to_store(req, image_meta, image_data, store, notifier):
         raise webob.exc.HTTPBadRequest(explanation=msg,
                                        content_type="text/plain",
                                        request=req)
+    except rbd.NoSpace as e:
+        msg = _LE("Error creating image: insufficient space available")
+        LOG.error(msg)
+        safe_kill(req, image_id, 'saving')
+        notifier.error('image.upload', msg)
+        raise webob.exc.HTTPRequestEntityTooLarge(explanation=msg,
+                                                  request=req,
+                                                  content_type='text/plain')
 
     except Exception as e:
-        msg = _("Failed to upload image %s") % image_id
+        msg = (_("Failed to upload image %(id)s. Error type: %(error)s") %
+               {'id': image_id, 'error': type(e).__name__})
         LOG.exception(msg)
         safe_kill(req, image_id, 'saving')
         notifier.error('image.upload', msg)
diff --git a/glance/tests/unit/fake_rados.py b/glance/tests/unit/fake_rados.py
index f94d448..65434be 100644
--- a/glance/tests/unit/fake_rados.py
+++ b/glance/tests/unit/fake_rados.py
@@ -61,6 +61,9 @@ class mock_rbd(object):
     class ImageNotFound(Exception):
         pass
 
+    class NoSpace(Exception):
+        pass
+
     class Image(object):
 
         def __init__(self, *args, **kwargs):
diff --git a/glance/tests/unit/v1/test_api.py b/glance/tests/unit/v1/test_api.py
index 589c48c..e2fc652 100644
--- a/glance/tests/unit/v1/test_api.py
+++ b/glance/tests/unit/v1/test_api.py
@@ -43,6 +43,7 @@ from glance.db.sqlalchemy import api as db_api
 from glance.db.sqlalchemy import models as db_models
 import glance.registry.client.v1.api as registry
 from glance.tests.unit import base
+from glance.tests.unit import fake_rados
 import glance.tests.unit.utils as unit_test_utils
 from glance.tests import utils as test_utils
 
@@ -1929,8 +1930,9 @@ class TestGlanceAPI(base.IsolatedUnitTest):
         # We expect 500 since an exception occurred during upload.
         self.assertEqual(http_client.INTERNAL_SERVER_ERROR, res.status_int)
 
+    @mock.patch.object(upload_utils, 'rbd')
     @mock.patch('glance_store.store_add_to_backend')
-    def test_upload_safe_kill(self, mock_store_add_to_backend):
+    def test_upload_safe_kill(self, mock_store_add_to_backend, mock_rbd):
 
         def mock_store_add_to_backend_w_exception(*args, **kwargs):
             """Trigger mid-upload failure by raising an exception."""
@@ -1938,6 +1940,8 @@ class TestGlanceAPI(base.IsolatedUnitTest):
             # Raise an exception to emulate failed upload.
             raise Exception("== UNIT TEST UPLOAD EXCEPTION ==")
 
+        mock_rbd.NoSpace = fake_rados.mock_rbd.NoSpace
+
         mocks = [{'mock': mock_store_add_to_backend,
                  'side_effect': mock_store_add_to_backend_w_exception}]
 
@@ -1949,8 +1953,10 @@ class TestGlanceAPI(base.IsolatedUnitTest):
 
         self.assertEqual(1, mock_store_add_to_backend.call_count)
 
+    @mock.patch.object(upload_utils, 'rbd')
     @mock.patch('glance_store.store_add_to_backend')
-    def test_upload_safe_kill_deleted(self, mock_store_add_to_backend):
+    def test_upload_safe_kill_deleted(self, mock_store_add_to_backend,
+                                      mock_rbd):
         test_router_api = router.API(self.mapper)
         self.api = test_utils.FakeAuthMiddleware(test_router_api,
                                                  is_admin=True)
@@ -1975,6 +1981,8 @@ class TestGlanceAPI(base.IsolatedUnitTest):
             # Raise an exception to make the upload fail.
             raise Exception("== UNIT TEST UPLOAD EXCEPTION ==")
 
+        mock_rbd.NoSpace = fake_rados.mock_rbd.NoSpace
+
         mocks = [{'mock': mock_store_add_to_backend,
                  'side_effect': mock_store_add_to_backend_w_exception}]
 
diff --git a/glance/tests/unit/v1/test_upload_utils.py b/glance/tests/unit/v1/test_upload_utils.py
index 60cb4d2..4b87241 100644
--- a/glance/tests/unit/v1/test_upload_utils.py
+++ b/glance/tests/unit/v1/test_upload_utils.py
@@ -26,6 +26,7 @@ from glance.common import store_utils
 from glance.common import utils
 import glance.registry.client.v1.api as registry
 from glance.tests.unit import base
+from glance.tests.unit import fake_rados
 import glance.tests.unit.utils as unit_test_utils
 
 
@@ -286,7 +287,9 @@ class TestUploadUtils(base.StoreClearingUnitTest):
             IOError,
             webob.exc.HTTPBadRequest)
 
-    def test_upload_data_to_store_exception(self):
+    @mock.patch.object(upload_utils, 'rbd')
+    def test_upload_data_to_store_exception(self, mock_rbd):
+        mock_rbd.NoSpace = fake_rados.mock_rbd.NoSpace
         self._test_upload_data_to_store_exception_with_notify(
             Exception,
             webob.exc.HTTPInternalServerError)
-- 
2.7.4

